:root {
	font-size: 12pt;

	--background: white; /* Base background */
	--text-color: black; /* Base text color */
	--border: 1px solid #ccc; /* Borders */
	--hover-bg: #eee; /* Applied to every action element such as buttons */

	--fixed-element-bg: #f8f8f8; /* Applies to fixed elements such as sidebar and top bar. Should be different than general background */
	--fixed-element-selected-bg: #e2e2e2; /* Applied to selected child of a fixed element. Should be darker than the background but lighter than the borders. */

	/* Scrollbars */
	--scrollbar-hover: #ccc;

	/* Divider */
	--divider-color: grey;

	/* Red delete icon */
	--delete-color: darkred;

	/* Error label and invalid inputs */
	--error-bg: #ffbebe;
	--error-border: darkred;

	/* Other labels */
	--message-bg: #e4f7ff;
	--message-border: cornflowerblue;

	--success-bg: #e3ffd3;
	--success-border: green;

	--warning-bg: #fff4c3;
	--warning-border: goldenrod; /* Also applied to revert button */
}

/*
Scrollbars.
We can consider scrollbars as fixed elements but fixed element's children have same background color as their parent. Since scrollbar's thumb should have different color from track's, we gotta shift our values a bit.
*/

.not-mobile ::-webkit-scrollbar-thumb:window-inactive {
	background: var(--hover-bg);
}

.not-mobile ::-webkit-scrollbar {
	width: 0.7rem;
}

.not-mobile ::-webkit-scrollbar-track {
	background: var(--fixed-element-bg);
	border-left: var(--border);
}

.not-mobile ::-webkit-scrollbar-thumb {
	background: var(--fixed-element-selected-bg);
	border-left: var(--border);
	transition: background 0.2s;
}

.not-mobile ::-webkit-scrollbar-thumb:hover {
	background: var(--scrollbar-hover);
	transition: background 0.2s;
}

body {
	padding: 0;
	margin: 0;
	font-family: arial, sans-serif;
	overflow: hidden;
}

* {
	color: var(--text-color);
	outline: none;
}

.hidden {
	display: none !important;
}

.leaflet-container {
	font: inherit;
	background: var(--background);
}

.leaflet-left .leaflet-control,
.leaflet-right .leaflet-control,
.als-button-base, select, .ri {
	margin: 0;
	border-radius: 0 !important;
	color: var(--text-color);
	background: var(--background);
	border: var(--border);
	cursor: default;
	box-shadow: none;
}

.als-zoom {
	border: none !important;
}

.als-zoom *:first-child {
	border-right: none;
}

.leaflet-popup-content-wrapper, .leaflet-popup-tip {
	background: var(--background);
}

.leaflet-control-coordinates .uiElement {
	font-size: 0.75rem !important;
	margin-top: 0;
	margin-bottom: 0;
}

.als-button-base {
	min-height: 2rem;
}

.als-button-base, select, .ri {
	display: inline-block;
	vertical-align: middle;
	box-sizing: border-box;
	padding: 0.2rem !important;
	overflow-wrap: break-word !important;
	width: 2rem;
	justify-content: center;
	align-items: center;
	text-align: center;
	transition: background 0.2s;
	user-select: none;
}

.not-mobile .als-button-base:hover, .not-mobile select:hover, .not-mobile .ri:hover, .jscolor-btn-close:hover {
	background: var(--hover-bg);
	transition: background 0.2s;
}


/* Setting background to select:active will cause bugs in older browsers, so we don't use it */
.als-button-base:active, .ri:active, .jscolor-btn-close:active {
	background: var(--fixed-element-selected-bg) !important;
	transition: background 0.2s;
}

.ri {
	max-width: 2rem;
	font-size: 1.6rem;
	width: 2rem;
	user-select: none;
}

/* Revert button in settings */
.als-revert-button {
	width: 1.5rem;
	height: 1.5rem;
	font-size: 0.7rem;
	line-height: 1rem;
	margin-left: 0.2rem;
	color: var(--warning-border);
}

input, select {
	font-size: 1rem;
	padding: 0 !important;
	background: var(--background);
	color: var(--text-color);
	border: var(--border);
}

.als-invalid-input {
	background: var(--error-bg);
	border: 1px solid var(--error-border);
}

input:invalid {
	box-shadow: none;
}

input:disabled {
	background: var(--fixed-element-bg);
}

input[type="color"] {
	padding: 0;
	height: 1.3rem;
}

/* Hack to make hidden file input work in old browsers */
input[type="file"] {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0,0,0,0);
	border: 0;
}

.als-file-area {
	display: block;
	height: auto;
	text-align: left;
	padding-left: 0.2rem;
	padding-right: 0.2rem;
	width: 100%;
}

select {
	height: 1.5rem;
}

select > * {
	background: var(--background);
}

/* JSColor */
.jscolor-picker-wrap {
	z-index: 999999 !important;
}

/* Make map take up whole space */
#map {
	position: fixed;
	top: 0;
	bottom: 0;
	width: 100%;
	height: 100%;
}

/* Icon button container */
.als-icon-button-container > .ri {
	width: auto;
	max-width: 100%;
}

/* Menu */
.als-menu-button {
	display: inline-block !important;
	width: 2rem !important;
	height: 2rem !important;
	font-size: 2rem !important;
	border: none;
	padding: 0 !important;
	line-height: 2rem !important;
}

/*
Menu.

Note on creating multiple system instances. Add following rules to your CSS:

.als-menu {
	position: relative;
	top: -100%;
	right: -100%;
	margin-left: 1rem;
	transition: margin-left ease-in-out 0.2s, left ease-in-out 0.2s;
}

.als-menu[data-hidden="0"] {
	right: -100%;
	margin-left: -22rem;
	transition: margin-left ease-in-out 0.2s, left ease-in-out 0.2s;
}

*/
.als-menu {
	position: fixed;
	top: 0;
	right: -23rem;
	z-index: 10000;
	width: 22rem;
	max-width: 100%;
	height: 100%;
	overflow: hidden;
	padding-bottom: 2rem;
	box-sizing: border-box;

	border-left: var(--border);
	background: var(--background);
	box-shadow: 0 1px 5px rgba(0, 0, 0, 0.4);
	transition: right ease-in-out 0.2s, left ease-in-out 0.2s;
}

.als-menu[data-hidden="0"] {
	right: 0;
	transition: right ease-in-out 0.2s, left ease-in-out 0.2s;
}

.als-menu.menu-left {
	left: -23rem;
}

.als-menu.menu-left[data-hidden="0"] {
	left: 0;
}

.mobile .als-menu {
	width: 100%;
	right: -100%;
	border: none;
}

.mobile .als-menu[data-hidden="0"] {
	right: 0;
}

.als-top-panel-wrapper {
	position: relative;
	width: 100%;
	max-width: 22rem;
	top: 0;
}

.als-top-panel-wrapper > * > * {
	background: var(--fixed-element-bg);
}

.not-mobile .als-top-panel-wrapper *:hover {
	background: var(--hover-bg);
}

.mobile .als-menu .als-top-panel-wrapper {
	max-width: 100%;
}

.als-menu-items {
	min-height: 100%;
	max-height: 100%;
	overflow-y: auto;
	overflow-x: hidden;
}

.als-items-row {
	display: table; /* Hack for older browsers */
	table-layout: fixed;
	display: flex;
	flex-flow: row;
	width: 100%;
	padding: 0;
	border-top: var(--border);
	border-bottom: var(--border);
}

.als-items-row > * {
	display: table-cell !important;
	display: flex !important;
	border: none !important;
	word-wrap: break-word;
	border-right: var(--border) !important;
	flex: 1;
}

.als-items-row > *:last-child {
	border-right: none;
}

.als-menu-maps-select {
	width: 100%; /* Hack for older browsers */
}

.als-menu-delete {
	color: var(--delete-color);
}

/* Wizard */

.als-window-background {
	display: block;
	position: fixed;
	z-index: 999999;
	width: 100%;
	height: 100%;
	opacity: 1;
	overflow: hidden;
	background: rgba(0, 0, 0, 0.8);
	transition: opacity 0.3s;
}

.als-window-background[data-hidden="1"] {
	width: 0;
	height: 0;
	opacity: 0;
	transition: all 0s 0.3s, opacity 0.3s;
}

.als-window-window {
	position: relative;
	display: block;
	max-height: 95% !important;
	max-width: 50rem;
	overflow-y: auto;
	left: 50%;
	top: 50%;
	background: var(--background);
	transform: translate(-50%, -50%);
	transition: top 0.3s;
	border: var(--border);
}

.mobile .als-window-window {
	border-left: none;
	border-right: none;
}

.als-window-background[data-hidden="1"] > .als-window-window {
	top: 25%;
	transition: top 0.4s;
}

.als-window-select, .als-menu-maps-select {
	height: 2rem !important;
	font-size: 1rem;
	text-align-last: center
}

.als-window-select {
	width: 100%;
	border: none;
	border-bottom: var(--border);
}

.als-window-content > * {
	width: 100%;
	background: var(--background);
}

/* Sidebar window */

.als-sidebar-window {
	overflow: hidden;
	box-sizing: border-box;
}

.als-sidebar-window *[data-hidden="1"] {
	display: none;
}

.als-sidebar-window .als-window-content {
	padding-bottom: 2rem;
}

.als-sidebar-window-content-wrapper {
	display: table-cell;
	width: 100%;
}

.als-sidebar-window-content-wrapper > .als-window-content {
	width: 100%;
}

.als-sidebar-window-content-wrapper > .als-window-content > * {
	width: 100%;
}

.als-sidebar-window-wrapper {
	overflow: auto;
	max-height: 100%;
}

.als-sidebar {
	display: table-cell;
	min-width: 10rem;
	background: var(--fixed-element-bg);
	border-right: var(--border);
	box-sizing: border-box;
	user-select: none;
}

.als-sidebar > * {
	width: 100%;
	height: auto;
	min-height: 0;
	line-height: 1.2rem;
	box-sizing: border-box;
	white-space: nowrap;
	text-align: left;
	border: none;
	border-bottom: var(--border);
	background: var(--fixed-element-bg);
}

.als-sidebar > *[data-is-selected="1"] {
	background: var(--fixed-element-selected-bg);
	transition: background 0.3s;
}

.als-window-sidebar-title {
	padding: 0.2rem;
	text-align: center;
	background: var(--fixed-element-bg);
	border-bottom: var(--border);
	white-space: normal;
	box-sizing: border-box;
	user-select: none;
}

.als-sidebar-window-button-container {
	border-bottom: 0;
}

.als-sidebar-window-button-container > :last-child {
	border-right: 0 !important;
}

/* Layers */
.als-layer-container {
	width: 100%;
}

.als-layer-menu[data-hidden="1"] {
	border-bottom: var(--border) !important;
}

.als-layer-container > .als-items-row {
	border-bottom: var(--border) !important;
	transition: background 0.3s;
}

.not-mobile .als-layer-container > .als-items-row:hover {
	background: var(--hover-bg);
	transition: background 0.3s;
}

.als-layer-container[data-is-selected = "1"] > .als-items-row,
.not-mobile .als-layer-container[data-is-selected = "1"] > .als-items-row:hover {
	background: var(--fixed-element-selected-bg);
	transition: background 0.3s;
}

.als-layer-container > .als-items-row {
	border: none;
}

.als-layer-label {
	display: inline-block;
	vertical-align: middle;
	display: flex;
	align-items: center;
	width: 73%;
	height: 2rem;
	margin: 0;
	white-space: nowrap;
	overflow: hidden;
}

.als-layer-label[contenteditable = "true"] {
	text-decoration: underline;
}

.als-layer-handle {
	cursor: move;
}

.als-layer-menu {
	display: block;
	width: 100%;
	border: none;

	/* Animation-related */
	overflow: hidden;
	transition: height 0.3s;
}

.als-widget-row {
	display: block; /* Hack for older browsers */
	display: flex;
	flex-flow: row wrap;
	align-items: center;
	box-sizing: border-box;
	padding: 0.2rem;
	width: 100%;
}

.als-widget-row > * {
	display: inline-block; /* Hack for older browsers */
}

.als-widget-row > label {
	width: 13rem; /* Hack for older browsers */
	margin-right: 0.3rem;
	flex: 1 1 13rem;
	user-select: none;
}

.als-input {
	width: 7rem; /* Hack for older browsers */
	flex: 9999 1 5rem;
}

.als-input > * {
	width: 100%;
	box-sizing: border-box;
}

.als-input > input {
	height: 1.2rem;
	padding-top: 0;
	padding-bottom: 0;
}

/* Checkbox */
.als-checkbox-wrapper {
	width: 1rem !important;
	flex: none;
}

.als-checkbox-wrapper > .ri {
	display: inline-block !important;
	vertical-align: middle !important;
	min-width: 1rem !important;
	width: 1rem !important;
	height: 1rem !important;
	min-height: 1rem !important;
	max-height: 1rem !important;
	font-size: 0.9rem !important;
	font-weight: 700;
	margin: 0 !important;
	padding: 0 !important;
}

/* Number input */
.als-number {
	display: flex;
	flex-flow: row;
}

.als-number > input {
	width: 4rem; /* Hack for older browsers */
	flex: 1 1;
}

.als-divicon .als-number > input {
	width: 2rem; /* Hack for older browsers */
}

.als-number > div {
	min-width: 1.2rem;
	max-width: 1.2rem;
	min-height: 1.2rem;
	height: 1.2rem;
	font-size: 1rem;
	font-weight: 700;
	line-height: 1.2rem;
	padding: 0 !important;
}

.als-number > * {
	border-right: none;
}

.als-number > *:last-child {
	border-right: var(--border);
}

/* Divider */
.als-divider {
	height: 1px;
	margin: 0.2rem;
	border: none;
	padding: 0;
	background: var(--divider-color); /* For browsers that does not support gradients */
	background: linear-gradient(90deg, transparent 5%, var(--divider-color) 25%, var(--divider-color) 75%, transparent 95%);
}

/* WidgetLayer */

.als-divicon-container {
	border: none;
	background: none;
}

.als-divicon {
	font-size: 0.75rem;
	background: var(--background);
	border: var(--border);
	width: 12rem;
}

.als-divicon-container .nostyle {
	border: none;
	padding: 0;
}

.als-divicon-container .nostyle > * {
	padding: 0;
}

.als-divicon-container .nostyle .als-simple-label {
	border: var(--border);
	padding: 0 0.1rem;
}

.als-divicon > .als-widget-row {
	display: flex;
	flex-flow: row;
}

.als-divicon input, .als-divicon select {
	font-size: 0.75rem !important;
}

.als-divicon > .als-widget-row > label {
	width: 60%;
	margin: 0;
	flex: 1 1 6rem;
}

.als-divicon > .als-widget-row > .als-input {
	width: 40%;
	flex: 9999 1 4rem;
}

.als-divicon-pos-center {
	transform: translate(-50%, -50%);
}

.als-divicon-pos-leftCenter {
	transform: translateY(-50%);
}

.als-divicon-pos-rightCenter {
	transform: translate(-100%, -50%);
}

.als-divicon-pos-topCenter {
	transform: translateX(-50%);
}

.als-divicon-pos-topRight {
	transform: translateX(-100%);
}

.als-divicon-pos-bottomLeft {
	transform: translateY(-100%);
}

.als-divicon-pos-bottomCenter {
	transform: translate(-50%, -100%);
}

.als-divicon-pos-bottomRight {
	transform: translate(-100%, -100%);
}

/* SimpleLabel */

.als-simple-label-wrapper {
	width: 100% !important;
}

.als-simple-label {
	flex: 99999999999999;
}

.als-simple-label.error {
	padding: 0.2rem;
	background: var(--error-bg);
	border: 1px solid var(--error-border) !important;
}

.als-simple-label.message {
	padding: 0.2rem;
	background: var(--message-bg);
	border: 1px solid var(--message-border) !important;
}

.als-simple-label.success {
	padding: 0.2rem;
	background: var(--success-bg);
	border: 1px solid var(--success-border) !important;
}

.als-simple-label.warning {
	padding: 0.2rem;
	background: var(--warning-bg);
	border: 1px solid var(--warning-border) !important;
}

/* Text area */
.als-textarea {
	font-family: arial, sans-serif;
	font-size: 1rem;
	resize: none;
	width: 100%;
	height: fit-content;
	max-height: 10rem;
	background: var(--fixed-element-bg);
	border: var(--border);
}

.als-textarea:disabled {
	color: var(--text-color);
}

.als-textarea-mono {
	font-family: Consolas, consolas, monospace;
}

.grd-lyr-airport-icon {
	display: flex !important;
	border: 2px solid white;
	border-radius: 50% !important;
	width: 2rem;
	height: 2rem;
	color: white;
	background: rgba(0, 0, 100, 0.4);
	box-shadow: 0 0 0 1px rgb(0, 0, 100);
	transform: translate(-50%, -50%);
}

.not-mobile .grd-lyr-airport-icon:hover {
	background: rgba(0, 0, 100, 0.7);
	cursor: move;
}

.grd-lyr-airport-icon:active {
	background: rgba(0, 0, 100, 1) !important;
	cursor: move;
}

/* About section */
.als-about-container h1, .als-about-container h2, .als-about-container h3, .als-about-container h4 {
	text-align: center;
	margin: 1rem;
}

.als-about-wrapper {
	padding: 0.5rem;
	box-sizing: border-box;
}

/* IE11 hacks */
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
	body {
		margin: 0;
		padding: 0;
	}

	.als-window-window {
		margin: 0;
	}

	.als-simple-label {
		max-width: 100%;
		flex: none;
	}
}